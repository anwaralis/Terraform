from SC:
Save png in this:   C:\Users\1307847
[Convert]::ToBase64String([IO.File]::ReadAllBytes(".\test.png")) > "encoded_image.txt"


From personal:  
Save png in this:  C:\Users\Test
$base64 = Get-Content "C:\Users\Test\encoded_image.txt" -Raw
[IO.File]::WriteAllBytes("C:\Users\Test\test.png", [Convert]::FromBase64String($base64))


$base64 = [Convert]::ToBase64String([IO.File]::ReadAllBytes("test.png"))
$chunks = $base64 -split "(.{10000})" | Where-Object { $_ -ne "" }
for ($i = 0; $i -lt $chunks.Count; $i++) {
    $chunks[$i] | Out-File "chunk_$i.txt"
}



Test Case ID	Test Scenario	Test Steps	Expected Result	Testing Technique
TC001	Remote job submission from SAS Viya to staging	Execute a dummy ETL script from Viya pointing to staging server	Script gets executed, logs and outputs stored on staging	Procedure Testing
TC002	Data read from staging by Viya job	Trigger Viya job that reads an input CSV from /data/input on staging	Viya job should complete and display correct data	Compatibility Testing
TC003	Data write to staging from Viya	Submit a job from Viya that writes output to /data/output on staging	File gets created and is accessible on staging server	Requirements/Functional
TC004	Handling invalid input file from Viya	Submit a job from Viya pointing to a corrupted file on staging	Job fails gracefully with error message	Error Handling
TC005	No write permission to folder	Viya job tries to write to a protected folder on staging	Job fails and returns appropriate permission denied error	Negative Testing
TC006	Max load test for staging	Submit 5â€“10 jobs from Viya in parallel to staging	All jobs are handled without crashing the server	Risk Based Testing
TC007	Job submission when staging disk is nearly full	Fill staging disk to 90% and submit job from Viya	Job should run or fail with disk space error	Boundary Value Analysis
TC008	Staging job handles corrupted SAS dataset	Place corrupted .sas7bdat on staging and run local script to read it	Job fails with clear logs or warnings	Error Handling
TC009	Local ETL job run on staging manually	Run a scheduled .sas job directly via cron or shell	Job should process data and save output locally	Procedure Testing
TC010	Staging reads a file >1GB	Place large file on staging and execute local SAS script to read	Job succeeds without memory issues	Compatibility Testing
TC011	Viya job timeout scenario	Submit a Viya job with artificial delay (e.g. sleep 300)	Job should timeout based on configured limits	State Transition Testing
TC012	Staging server uptime and access test	Login via SSH and validate SAS processes are running	Server is responsive, cntspawn or sasspawner is active	Exploratory Testing
TC013	Directory permissions test on staging	Try creating and deleting files as SAS user in /data	SAS user should only write in permitted folders	Requirements/Functional
TC014	Parallel access to same file	Submit 2 jobs that try to write to the same file	Only one succeeds or both fail with lock error	Race Conditions Testing
TC015	Large data file output validation	Submit job that writes >10GB result on staging	Output is fully written and readable	Conversion Testing


