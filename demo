data test;
    x = 10;
    y = x * 5;
run;

proc print data=test;
run;




root@ip-10-137-128-246[home] # cd migrationuser/
root@ip-10-137-128-246[migrationuser] # ls
nohup.out
root@ip-10-137-128-246[migrationuser] # nano test.sas
root@ip-10-137-128-246[migrationuser] # nano test.sas
root@ip-10-137-128-246[migrationuser] # cat test.sas
data test;
    x = 10;
    y = x * 5;
run;

proc print data=test;
run;
root@ip-10-137-128-246[migrationuser] # /sas/sasinst/SASHome/SASFoundation/9.4/sas /home/migrationuser/test.sas -log /home/migrationuser/test.log -print /home/migrationuser/test.lst
root@ip-10-137-128-246[migrationuser] # ls
nohup.out  test.log  test.lst  test.sas
root@ip-10-137-128-246[migrationuser] # cat test.log
1                                                          The SAS System                             11:52 Wednesday, June 18, 2025

NOTE: Copyright (c) 2016 by SAS Institute Inc., Cary, NC, USA.
NOTE: SAS (r) Proprietary Software 9.4 (TS1M6)
      Licensed to STANDARD CHARTERED BANK LTD, Site 11600037.
NOTE: This session is executing on the Linux 3.10.0-1160.132.1.el7.x86_64 (LIN X64) platform.



NOTE: Analytical products:

      SAS/STAT 15.1

NOTE: Additional host information:

 Linux LIN X64 3.10.0-1160.132.1.el7.x86_64 #1 SMP Fri Feb 7 13:47:27 EST 2025 x86_64 Red Hat Enterprise Linux Server release 7.9
      (Maipo)

You are running SAS 9. Some SAS 8 files will be automatically converted
by the V9 engine; others are incompatible.  Please see
http://support.sas.com/rnd/migration/planning/platform/64bit.html

PROC MIGRATE will preserve current SAS file attributes and is
recommended for converting all your SAS libraries from any
SAS 8 release to SAS 9.  For details and examples, please see
http://support.sas.com/rnd/migration/index.html


This message is contained in the SAS news file, and is presented upon
initialization.  Edit the file "news" in the "misc/base" directory to
display site-specific news and information in the program log.
The command line option "-nonews" will prevent this display.




NOTE: SAS initialization used:
      real time           0.02 seconds
      cpu time            0.02 seconds


NOTE: AUTOEXEC processing beginning; file is /sas/sasinst/SASHome/SASFoundation/9.4/autoexec.sas.

NOTE: Libref BJAN20 was successfully assigned as follows:
      Engine:        V9
      Physical Name: /Bank/Bases/jan20

NOTE: AUTOEXEC processing completed.

1          data test;
2              x = 10;
3              y = x * 5;
4          run;

NOTE: The data set WORK.TEST has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
2                                                          The SAS System                             11:52 Wednesday, June 18, 2025

5
6          proc print data=test;
7          run;

NOTE: There were 1 observations read from the data set WORK.TEST.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.02 seconds


NOTE: SAS Institute Inc., SAS Campus Drive, Cary, NC USA 27513-2414
NOTE: The SAS System used:
      real time           0.05 seconds
      cpu time            0.05 seconds

root@ip-10-137-128-246[migrationuser] # cat test.lst
                                                           The SAS System                         11:52 Wednesday, June 18, 2025   1

                                                          Obs     x     y

                                                           1     10    50
root@ip-10-137-128-246[migrationuser] #







Got it! Here's a step-by-step breakdown you can paste into your ADO test suite under the **Test Steps / Actions** section:

---

### **Title**: Verify SAS 9.4 Functionality on Staging Linux Server via CLI

#### **Steps**:

1. Login to the staging SAS server using PuTTY with SAS credentials.
2. Switch to root user using `sudo su`.
3. Navigate to home directory: `cd /home/migrationuser`
4. Create a test SAS program file: `nano test.sas`
5. Add the following SAS code to the file and save:

   ```sas
   data test;
       x = 10;
       y = x * 5;
   run;

   proc print data=test;
   run;
   ```
6. Execute the SAS program using the full SAS binary path:

   ```bash
   /sas/sasinst/SASHome/SASFoundation/9.4/sas test.sas -log test.log -print test.lst
   ```
7. Confirm SAS executed successfully by reviewing output in `test.log` and `test.lst`.

#### **Expected Result**:

SAS program executes without errors. The log confirms dataset creation and `proc print` output lists `x = 10`, `y = 50`.

---

Let me know if you'd like this in Excel/ADO format or need separate expected results for each step.



This SAS backend server hosts analytical and reporting workloads for EUC applications, enabling end-users to run ad-hoc SAS programs, generate reports, and perform data analysis on localized datasets."

Let me know if you want to tailor it specifically for your application like “EUC-SCBIN(51212)” or include server location or team details


